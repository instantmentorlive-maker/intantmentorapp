rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isAdmin() { return request.auth.token.admin == true; }

    match /wallets/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow write: if false; // server-only via Functions
    }

    match /earnings/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow write: if false; // server-only
    }

    match /transactions/{txId} {
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      allow create, update, delete: if false; // append-only via Functions
    }

    match /sessions/{sessionId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn(); // business rules validated server-side
    }

    match /payouts/{payoutId} {
      allow read: if isSignedIn() && (resource.data.mentorId == request.auth.uid || isAdmin());
      allow write: if false; // server-only
    }
  }
}
